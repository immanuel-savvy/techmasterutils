"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="reportEngineSettings.ts">
 *   Copyright (c) 2023 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportEngineSettings = exports.importsMapReportEngineSettings = void 0;
const csvDataLoadOptions_1 = require("./csvDataLoadOptions");
const jsonDataLoadOptions_1 = require("./jsonDataLoadOptions");
const reportBuildOptions_1 = require("./reportBuildOptions");
const xmlDataLoadOptions_1 = require("./xmlDataLoadOptions");
exports.importsMapReportEngineSettings = {
    CsvDataLoadOptions: csvDataLoadOptions_1.CsvDataLoadOptions,
    JsonDataLoadOptions: jsonDataLoadOptions_1.JsonDataLoadOptions,
    ReportBuildOptions: reportBuildOptions_1.ReportBuildOptions,
    XmlDataLoadOptions: xmlDataLoadOptions_1.XmlDataLoadOptions,
};
/**
 * Report engine settings.
 */
class ReportEngineSettings {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return ReportEngineSettings.attributeTypeMap;
    }
    constructor(init) {
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
}
exports.ReportEngineSettings = ReportEngineSettings;
/**
 * Attribute type map
 */
ReportEngineSettings.attributeTypeMap = [
    {
        name: "csvDataLoadOptions",
        baseName: "CsvDataLoadOptions",
        type: "CsvDataLoadOptions",
    },
    {
        name: "dataSourceName",
        baseName: "DataSourceName",
        type: "string",
    },
    {
        name: "dataSourceType",
        baseName: "DataSourceType",
        type: "ReportEngineSettings.DataSourceTypeEnum",
    },
    {
        name: "jsonDataLoadOptions",
        baseName: "JsonDataLoadOptions",
        type: "JsonDataLoadOptions",
    },
    {
        name: "reportBuildOptions",
        baseName: "ReportBuildOptions",
        type: "Array<ReportBuildOptions>",
    },
    {
        name: "xmlDataLoadOptions",
        baseName: "XmlDataLoadOptions",
        type: "XmlDataLoadOptions",
    }
];
/**
 * Enums for ReportEngineSettings
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (ReportEngineSettings) {
    let DataSourceTypeEnum;
    (function (DataSourceTypeEnum) {
        DataSourceTypeEnum[DataSourceTypeEnum["Xml"] = 'Xml'] = "Xml";
        DataSourceTypeEnum[DataSourceTypeEnum["Json"] = 'Json'] = "Json";
        DataSourceTypeEnum[DataSourceTypeEnum["Csv"] = 'Csv'] = "Csv";
    })(DataSourceTypeEnum = ReportEngineSettings.DataSourceTypeEnum || (ReportEngineSettings.DataSourceTypeEnum = {}));
})(ReportEngineSettings = exports.ReportEngineSettings || (exports.ReportEngineSettings = {}));
// tslint:enable:quotemark
