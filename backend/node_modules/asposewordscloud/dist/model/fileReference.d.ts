/// <reference types="node" />
import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
import { Readable } from "stream";
export declare const importsMapFileReference: {};
export declare class FileReference implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    private source;
    private reference;
    private content;
    private constructor();
    collectFilesContent(_resultFilesContent: Array<any>): void;
    getSource(): FileReference.SourceEnum;
    getReference(): string;
    getContent(): Readable;
    static fromRemoteFilePath(remoteFilePath: string): FileReference;
    static fromLocalFileContent(localFileContent: Readable): FileReference;
}
export declare namespace FileReference {
    enum SourceEnum {
        Storage,
        Request
    }
}
