import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
export declare const importsMapJsonDataLoadOptions: {};
/**
 * Represents options for parsing JSON data.
 */
export declare class JsonDataLoadOptions implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether a generated data source will always contain
     * an object for a JSON root element. If a JSON root element contains a single complex
     * property, such an object is not created by default.
     */
    alwaysGenerateRootObject: boolean;
    /**
     * Gets or sets exact formats for parsing JSON date-time values while loading JSON.
     * The default is null.
     */
    exactDateTimeParseFormats: Array<string>;
    /**
     * Gets or sets a mode for parsing JSON simple values (null, boolean, number, integer,
     * and string) while loading JSON. Such a mode does not affect parsing of date-time
     * values. The default is Aspose.Words.Reporting.JsonSimpleValueParseMode.Loose.
     */
    simpleValueParseMode: JsonDataLoadOptions.SimpleValueParseModeEnum;
    constructor(init?: Partial<JsonDataLoadOptions>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
}
/**
 * Enums for JsonDataLoadOptions
 */
export declare namespace JsonDataLoadOptions {
    enum SimpleValueParseModeEnum {
        Loose,
        Strict
    }
}
